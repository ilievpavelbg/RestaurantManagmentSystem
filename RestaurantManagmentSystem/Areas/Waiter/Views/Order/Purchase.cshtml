@model List<Category>

@{
    ViewBag.Title = "Purchase Modul";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm())
{
    for (var i = 0; i < Model.Count(); i++)
    {
        <table class="table">
            <tr>
                <td class="fs-2 text-center">
                    @Html.DisplayFor(it => Model[i].Name)
                </td>
                <td>
                    @Html.HiddenFor(it => Model[i].Id)
                    @Html.HiddenFor(it => Model[i].Name)
                    @Html.HiddenFor(it => Model[i].IsChecked)
                    @Html.HiddenFor(it => Model[i].IsDeleted)
                    @Html.HiddenFor(it => Model[i].SubOrderId)

                </td>
            </tr>
        </table>


        for (var x = 0; x < Model[i].MenuItems.Count(); x++)
        {
            <table class="table">
                <tr>
                    <td class="col-1">
                        @Html.CheckBoxFor(it => Model[i].MenuItems[x].IsChecked, new {id = "checkbox"})
                    </td>
                    <td class="fs-4">
                        @Html.HiddenFor(it => Model[i].MenuItems[x].Id)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].Name)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].Description)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].Price)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].ImageURL)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].ItemsForCooking)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].IsDeleted)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].CategoryId)
                        @Html.HiddenFor(it => Model[i].MenuItems[x].OnStock)


                        @Html.DisplayFor(it => Model[i].MenuItems[x].Name)
                        @Html.DisplayFor(it => Model[i].MenuItems[x].Price)

                        @Html.EditorFor(it => Model[i].MenuItems[x].OrderedQty, new {htmlAttributes = new { @min= "0", @max = @Model[i].MenuItems[x].OnStock}})
                    </td>
                </tr>
            </table>
        }

    }
    <input id="Submit" type="submit" value="submit" />
}


<script>
    let input = document.getElementById("Submit");
    let inputCheck = document.querySelectorAll("#checkbox");
    let trs = document.querySelectorAll('.table tr td[class="fs-4"]');

     console.log(input);

    for (let i = 0; i < trs.length; i++) {


        trs[i].childNodes[19].disabled = true;


    }

    input.disabled = true; //setting button state to disabled

    let enabledSettings = []

    // Use Array.forEach to add an event listener to each checkbox.
    inputCheck.forEach(function(checkbox) {
        checkbox.addEventListener('change', function() {
            enabledSettings = Array.from(inputCheck) // Convert checkboxes to an array to use filter and map.

            if (enabledSettings.some(x => x.checked)) {

                input.disabled = false;

            }
            else {

                input.disabled = true;


            }

            

            for (let i = 0; i < enabledSettings.length; i++) {

                if (enabledSettings[i].checked) {

                    trs[i].childNodes[19].disabled = false;
                    

                }
                else {

                    trs[i].childNodes[19].disabled = true;
                    trs[i].childNodes[19].textContent = 0;

                }

            }

        })
    });

</script>



